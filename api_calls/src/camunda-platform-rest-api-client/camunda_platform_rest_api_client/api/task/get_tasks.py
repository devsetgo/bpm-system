from typing import Any, Dict, List, Optional, Union

import httpx

from ...client import Client
from ...models.exception_dto import ExceptionDto
from ...models.get_tasks_delegation_state import GetTasksDelegationState
from ...models.get_tasks_sort_by import GetTasksSortBy
from ...models.get_tasks_sort_order import GetTasksSortOrder
from ...models.task_dto import TaskDto
from ...types import UNSET, Response, Unset


def _get_kwargs(
    *,
    client: Client,
    task_id: Union[Unset, None, str] = UNSET,
    task_id_in: Union[Unset, None, str] = UNSET,
    process_instance_id: Union[Unset, None, str] = UNSET,
    process_instance_id_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key: Union[Unset, None, str] = UNSET,
    process_instance_business_key_expression: Union[Unset, None, str] = UNSET,
    process_instance_business_key_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like_expression: Union[Unset, None, str] = UNSET,
    process_definition_id: Union[Unset, None, str] = UNSET,
    process_definition_key: Union[Unset, None, str] = UNSET,
    process_definition_key_in: Union[Unset, None, str] = UNSET,
    process_definition_name: Union[Unset, None, str] = UNSET,
    process_definition_name_like: Union[Unset, None, str] = UNSET,
    execution_id: Union[Unset, None, str] = UNSET,
    case_instance_id: Union[Unset, None, str] = UNSET,
    case_instance_business_key: Union[Unset, None, str] = UNSET,
    case_instance_business_key_like: Union[Unset, None, str] = UNSET,
    case_definition_id: Union[Unset, None, str] = UNSET,
    case_definition_key: Union[Unset, None, str] = UNSET,
    case_definition_name: Union[Unset, None, str] = UNSET,
    case_definition_name_like: Union[Unset, None, str] = UNSET,
    case_execution_id: Union[Unset, None, str] = UNSET,
    activity_instance_id_in: Union[Unset, None, str] = UNSET,
    tenant_id_in: Union[Unset, None, str] = UNSET,
    without_tenant_id: Union[Unset, None, bool] = False,
    assignee: Union[Unset, None, str] = UNSET,
    assignee_expression: Union[Unset, None, str] = UNSET,
    assignee_like: Union[Unset, None, str] = UNSET,
    assignee_like_expression: Union[Unset, None, str] = UNSET,
    assignee_in: Union[Unset, None, str] = UNSET,
    owner: Union[Unset, None, str] = UNSET,
    owner_expression: Union[Unset, None, str] = UNSET,
    candidate_group: Union[Unset, None, str] = UNSET,
    candidate_group_expression: Union[Unset, None, str] = UNSET,
    candidate_user: Union[Unset, None, str] = UNSET,
    candidate_user_expression: Union[Unset, None, str] = UNSET,
    include_assigned_tasks: Union[Unset, None, bool] = False,
    involved_user: Union[Unset, None, str] = UNSET,
    involved_user_expression: Union[Unset, None, str] = UNSET,
    assigned: Union[Unset, None, bool] = False,
    unassigned: Union[Unset, None, bool] = False,
    task_definition_key: Union[Unset, None, str] = UNSET,
    task_definition_key_in: Union[Unset, None, str] = UNSET,
    task_definition_key_like: Union[Unset, None, str] = UNSET,
    name: Union[Unset, None, str] = UNSET,
    name_not_equal: Union[Unset, None, str] = UNSET,
    name_like: Union[Unset, None, str] = UNSET,
    name_not_like: Union[Unset, None, str] = UNSET,
    description: Union[Unset, None, str] = UNSET,
    description_like: Union[Unset, None, str] = UNSET,
    priority: Union[Unset, None, int] = UNSET,
    max_priority: Union[Unset, None, int] = UNSET,
    min_priority: Union[Unset, None, int] = UNSET,
    due_date: Union[Unset, None, str] = UNSET,
    due_date_expression: Union[Unset, None, str] = UNSET,
    due_after: Union[Unset, None, str] = UNSET,
    due_after_expression: Union[Unset, None, str] = UNSET,
    due_before: Union[Unset, None, str] = UNSET,
    due_before_expression: Union[Unset, None, str] = UNSET,
    without_due_date: Union[Unset, None, bool] = False,
    follow_up_date: Union[Unset, None, str] = UNSET,
    follow_up_date_expression: Union[Unset, None, str] = UNSET,
    follow_up_after: Union[Unset, None, str] = UNSET,
    follow_up_after_expression: Union[Unset, None, str] = UNSET,
    follow_up_before: Union[Unset, None, str] = UNSET,
    follow_up_before_expression: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent_expression: Union[Unset, None, str] = UNSET,
    created_on: Union[Unset, None, str] = UNSET,
    created_on_expression: Union[Unset, None, str] = UNSET,
    created_after: Union[Unset, None, str] = UNSET,
    created_after_expression: Union[Unset, None, str] = UNSET,
    created_before: Union[Unset, None, str] = UNSET,
    created_before_expression: Union[Unset, None, str] = UNSET,
    delegation_state: Union[Unset, None, GetTasksDelegationState] = UNSET,
    candidate_groups: Union[Unset, None, str] = UNSET,
    candidate_groups_expression: Union[Unset, None, str] = UNSET,
    with_candidate_groups: Union[Unset, None, bool] = False,
    without_candidate_groups: Union[Unset, None, bool] = False,
    with_candidate_users: Union[Unset, None, bool] = False,
    without_candidate_users: Union[Unset, None, bool] = False,
    active: Union[Unset, None, bool] = False,
    suspended: Union[Unset, None, bool] = False,
    task_variables: Union[Unset, None, str] = UNSET,
    process_variables: Union[Unset, None, str] = UNSET,
    case_instance_variables: Union[Unset, None, str] = UNSET,
    variable_names_ignore_case: Union[Unset, None, bool] = False,
    variable_values_ignore_case: Union[Unset, None, bool] = False,
    parent_task_id: Union[Unset, None, str] = UNSET,
    sort_by: Union[Unset, None, GetTasksSortBy] = UNSET,
    sort_order: Union[Unset, None, GetTasksSortOrder] = UNSET,
    first_result: Union[Unset, None, int] = UNSET,
    max_results: Union[Unset, None, int] = UNSET,
) -> Dict[str, Any]:
    url = "{}/task".format(client.base_url)

    headers: Dict[str, Any] = client.get_headers()
    cookies: Dict[str, Any] = client.get_cookies()

    json_delegation_state: Union[Unset, None, str] = UNSET
    if not isinstance(delegation_state, Unset):
        json_delegation_state = delegation_state.value if delegation_state else None

    json_sort_by: Union[Unset, None, str] = UNSET
    if not isinstance(sort_by, Unset):
        json_sort_by = sort_by.value if sort_by else None

    json_sort_order: Union[Unset, None, str] = UNSET
    if not isinstance(sort_order, Unset):
        json_sort_order = sort_order.value if sort_order else None

    params: Dict[str, Any] = {
        "taskId": task_id,
        "taskIdIn": task_id_in,
        "processInstanceId": process_instance_id,
        "processInstanceIdIn": process_instance_id_in,
        "processInstanceBusinessKey": process_instance_business_key,
        "processInstanceBusinessKeyExpression": process_instance_business_key_expression,
        "processInstanceBusinessKeyIn": process_instance_business_key_in,
        "processInstanceBusinessKeyLike": process_instance_business_key_like,
        "processInstanceBusinessKeyLikeExpression": process_instance_business_key_like_expression,
        "processDefinitionId": process_definition_id,
        "processDefinitionKey": process_definition_key,
        "processDefinitionKeyIn": process_definition_key_in,
        "processDefinitionName": process_definition_name,
        "processDefinitionNameLike": process_definition_name_like,
        "executionId": execution_id,
        "caseInstanceId": case_instance_id,
        "caseInstanceBusinessKey": case_instance_business_key,
        "caseInstanceBusinessKeyLike": case_instance_business_key_like,
        "caseDefinitionId": case_definition_id,
        "caseDefinitionKey": case_definition_key,
        "caseDefinitionName": case_definition_name,
        "caseDefinitionNameLike": case_definition_name_like,
        "caseExecutionId": case_execution_id,
        "activityInstanceIdIn": activity_instance_id_in,
        "tenantIdIn": tenant_id_in,
        "withoutTenantId": without_tenant_id,
        "assignee": assignee,
        "assigneeExpression": assignee_expression,
        "assigneeLike": assignee_like,
        "assigneeLikeExpression": assignee_like_expression,
        "assigneeIn": assignee_in,
        "owner": owner,
        "ownerExpression": owner_expression,
        "candidateGroup": candidate_group,
        "candidateGroupExpression": candidate_group_expression,
        "candidateUser": candidate_user,
        "candidateUserExpression": candidate_user_expression,
        "includeAssignedTasks": include_assigned_tasks,
        "involvedUser": involved_user,
        "involvedUserExpression": involved_user_expression,
        "assigned": assigned,
        "unassigned": unassigned,
        "taskDefinitionKey": task_definition_key,
        "taskDefinitionKeyIn": task_definition_key_in,
        "taskDefinitionKeyLike": task_definition_key_like,
        "name": name,
        "nameNotEqual": name_not_equal,
        "nameLike": name_like,
        "nameNotLike": name_not_like,
        "description": description,
        "descriptionLike": description_like,
        "priority": priority,
        "maxPriority": max_priority,
        "minPriority": min_priority,
        "dueDate": due_date,
        "dueDateExpression": due_date_expression,
        "dueAfter": due_after,
        "dueAfterExpression": due_after_expression,
        "dueBefore": due_before,
        "dueBeforeExpression": due_before_expression,
        "withoutDueDate": without_due_date,
        "followUpDate": follow_up_date,
        "followUpDateExpression": follow_up_date_expression,
        "followUpAfter": follow_up_after,
        "followUpAfterExpression": follow_up_after_expression,
        "followUpBefore": follow_up_before,
        "followUpBeforeExpression": follow_up_before_expression,
        "followUpBeforeOrNotExistent": follow_up_before_or_not_existent,
        "followUpBeforeOrNotExistentExpression": follow_up_before_or_not_existent_expression,
        "createdOn": created_on,
        "createdOnExpression": created_on_expression,
        "createdAfter": created_after,
        "createdAfterExpression": created_after_expression,
        "createdBefore": created_before,
        "createdBeforeExpression": created_before_expression,
        "delegationState": json_delegation_state,
        "candidateGroups": candidate_groups,
        "candidateGroupsExpression": candidate_groups_expression,
        "withCandidateGroups": with_candidate_groups,
        "withoutCandidateGroups": without_candidate_groups,
        "withCandidateUsers": with_candidate_users,
        "withoutCandidateUsers": without_candidate_users,
        "active": active,
        "suspended": suspended,
        "taskVariables": task_variables,
        "processVariables": process_variables,
        "caseInstanceVariables": case_instance_variables,
        "variableNamesIgnoreCase": variable_names_ignore_case,
        "variableValuesIgnoreCase": variable_values_ignore_case,
        "parentTaskId": parent_task_id,
        "sortBy": json_sort_by,
        "sortOrder": json_sort_order,
        "firstResult": first_result,
        "maxResults": max_results,
    }
    params = {k: v for k, v in params.items() if v is not UNSET and v is not None}

    return {
        "url": url,
        "headers": headers,
        "cookies": cookies,
        "timeout": client.get_timeout(),
        "params": params,
    }


def _parse_response(*, response: httpx.Response) -> Optional[Union[ExceptionDto, List[TaskDto]]]:
    if response.status_code == 200:
        response_200 = []
        _response_200 = response.json()
        for response_200_item_data in _response_200:
            response_200_item = TaskDto.from_dict(response_200_item_data)

            response_200.append(response_200_item)

        return response_200
    if response.status_code == 400:
        response_400 = ExceptionDto.from_dict(response.json())

        return response_400
    return None


def _build_response(*, response: httpx.Response) -> Response[Union[ExceptionDto, List[TaskDto]]]:
    return Response(
        status_code=response.status_code,
        content=response.content,
        headers=response.headers,
        parsed=_parse_response(response=response),
    )


def sync_detailed(
    *,
    client: Client,
    task_id: Union[Unset, None, str] = UNSET,
    task_id_in: Union[Unset, None, str] = UNSET,
    process_instance_id: Union[Unset, None, str] = UNSET,
    process_instance_id_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key: Union[Unset, None, str] = UNSET,
    process_instance_business_key_expression: Union[Unset, None, str] = UNSET,
    process_instance_business_key_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like_expression: Union[Unset, None, str] = UNSET,
    process_definition_id: Union[Unset, None, str] = UNSET,
    process_definition_key: Union[Unset, None, str] = UNSET,
    process_definition_key_in: Union[Unset, None, str] = UNSET,
    process_definition_name: Union[Unset, None, str] = UNSET,
    process_definition_name_like: Union[Unset, None, str] = UNSET,
    execution_id: Union[Unset, None, str] = UNSET,
    case_instance_id: Union[Unset, None, str] = UNSET,
    case_instance_business_key: Union[Unset, None, str] = UNSET,
    case_instance_business_key_like: Union[Unset, None, str] = UNSET,
    case_definition_id: Union[Unset, None, str] = UNSET,
    case_definition_key: Union[Unset, None, str] = UNSET,
    case_definition_name: Union[Unset, None, str] = UNSET,
    case_definition_name_like: Union[Unset, None, str] = UNSET,
    case_execution_id: Union[Unset, None, str] = UNSET,
    activity_instance_id_in: Union[Unset, None, str] = UNSET,
    tenant_id_in: Union[Unset, None, str] = UNSET,
    without_tenant_id: Union[Unset, None, bool] = False,
    assignee: Union[Unset, None, str] = UNSET,
    assignee_expression: Union[Unset, None, str] = UNSET,
    assignee_like: Union[Unset, None, str] = UNSET,
    assignee_like_expression: Union[Unset, None, str] = UNSET,
    assignee_in: Union[Unset, None, str] = UNSET,
    owner: Union[Unset, None, str] = UNSET,
    owner_expression: Union[Unset, None, str] = UNSET,
    candidate_group: Union[Unset, None, str] = UNSET,
    candidate_group_expression: Union[Unset, None, str] = UNSET,
    candidate_user: Union[Unset, None, str] = UNSET,
    candidate_user_expression: Union[Unset, None, str] = UNSET,
    include_assigned_tasks: Union[Unset, None, bool] = False,
    involved_user: Union[Unset, None, str] = UNSET,
    involved_user_expression: Union[Unset, None, str] = UNSET,
    assigned: Union[Unset, None, bool] = False,
    unassigned: Union[Unset, None, bool] = False,
    task_definition_key: Union[Unset, None, str] = UNSET,
    task_definition_key_in: Union[Unset, None, str] = UNSET,
    task_definition_key_like: Union[Unset, None, str] = UNSET,
    name: Union[Unset, None, str] = UNSET,
    name_not_equal: Union[Unset, None, str] = UNSET,
    name_like: Union[Unset, None, str] = UNSET,
    name_not_like: Union[Unset, None, str] = UNSET,
    description: Union[Unset, None, str] = UNSET,
    description_like: Union[Unset, None, str] = UNSET,
    priority: Union[Unset, None, int] = UNSET,
    max_priority: Union[Unset, None, int] = UNSET,
    min_priority: Union[Unset, None, int] = UNSET,
    due_date: Union[Unset, None, str] = UNSET,
    due_date_expression: Union[Unset, None, str] = UNSET,
    due_after: Union[Unset, None, str] = UNSET,
    due_after_expression: Union[Unset, None, str] = UNSET,
    due_before: Union[Unset, None, str] = UNSET,
    due_before_expression: Union[Unset, None, str] = UNSET,
    without_due_date: Union[Unset, None, bool] = False,
    follow_up_date: Union[Unset, None, str] = UNSET,
    follow_up_date_expression: Union[Unset, None, str] = UNSET,
    follow_up_after: Union[Unset, None, str] = UNSET,
    follow_up_after_expression: Union[Unset, None, str] = UNSET,
    follow_up_before: Union[Unset, None, str] = UNSET,
    follow_up_before_expression: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent_expression: Union[Unset, None, str] = UNSET,
    created_on: Union[Unset, None, str] = UNSET,
    created_on_expression: Union[Unset, None, str] = UNSET,
    created_after: Union[Unset, None, str] = UNSET,
    created_after_expression: Union[Unset, None, str] = UNSET,
    created_before: Union[Unset, None, str] = UNSET,
    created_before_expression: Union[Unset, None, str] = UNSET,
    delegation_state: Union[Unset, None, GetTasksDelegationState] = UNSET,
    candidate_groups: Union[Unset, None, str] = UNSET,
    candidate_groups_expression: Union[Unset, None, str] = UNSET,
    with_candidate_groups: Union[Unset, None, bool] = False,
    without_candidate_groups: Union[Unset, None, bool] = False,
    with_candidate_users: Union[Unset, None, bool] = False,
    without_candidate_users: Union[Unset, None, bool] = False,
    active: Union[Unset, None, bool] = False,
    suspended: Union[Unset, None, bool] = False,
    task_variables: Union[Unset, None, str] = UNSET,
    process_variables: Union[Unset, None, str] = UNSET,
    case_instance_variables: Union[Unset, None, str] = UNSET,
    variable_names_ignore_case: Union[Unset, None, bool] = False,
    variable_values_ignore_case: Union[Unset, None, bool] = False,
    parent_task_id: Union[Unset, None, str] = UNSET,
    sort_by: Union[Unset, None, GetTasksSortBy] = UNSET,
    sort_order: Union[Unset, None, GetTasksSortOrder] = UNSET,
    first_result: Union[Unset, None, int] = UNSET,
    max_results: Union[Unset, None, int] = UNSET,
) -> Response[Union[ExceptionDto, List[TaskDto]]]:
    kwargs = _get_kwargs(
        client=client,
        task_id=task_id,
        task_id_in=task_id_in,
        process_instance_id=process_instance_id,
        process_instance_id_in=process_instance_id_in,
        process_instance_business_key=process_instance_business_key,
        process_instance_business_key_expression=process_instance_business_key_expression,
        process_instance_business_key_in=process_instance_business_key_in,
        process_instance_business_key_like=process_instance_business_key_like,
        process_instance_business_key_like_expression=process_instance_business_key_like_expression,
        process_definition_id=process_definition_id,
        process_definition_key=process_definition_key,
        process_definition_key_in=process_definition_key_in,
        process_definition_name=process_definition_name,
        process_definition_name_like=process_definition_name_like,
        execution_id=execution_id,
        case_instance_id=case_instance_id,
        case_instance_business_key=case_instance_business_key,
        case_instance_business_key_like=case_instance_business_key_like,
        case_definition_id=case_definition_id,
        case_definition_key=case_definition_key,
        case_definition_name=case_definition_name,
        case_definition_name_like=case_definition_name_like,
        case_execution_id=case_execution_id,
        activity_instance_id_in=activity_instance_id_in,
        tenant_id_in=tenant_id_in,
        without_tenant_id=without_tenant_id,
        assignee=assignee,
        assignee_expression=assignee_expression,
        assignee_like=assignee_like,
        assignee_like_expression=assignee_like_expression,
        assignee_in=assignee_in,
        owner=owner,
        owner_expression=owner_expression,
        candidate_group=candidate_group,
        candidate_group_expression=candidate_group_expression,
        candidate_user=candidate_user,
        candidate_user_expression=candidate_user_expression,
        include_assigned_tasks=include_assigned_tasks,
        involved_user=involved_user,
        involved_user_expression=involved_user_expression,
        assigned=assigned,
        unassigned=unassigned,
        task_definition_key=task_definition_key,
        task_definition_key_in=task_definition_key_in,
        task_definition_key_like=task_definition_key_like,
        name=name,
        name_not_equal=name_not_equal,
        name_like=name_like,
        name_not_like=name_not_like,
        description=description,
        description_like=description_like,
        priority=priority,
        max_priority=max_priority,
        min_priority=min_priority,
        due_date=due_date,
        due_date_expression=due_date_expression,
        due_after=due_after,
        due_after_expression=due_after_expression,
        due_before=due_before,
        due_before_expression=due_before_expression,
        without_due_date=without_due_date,
        follow_up_date=follow_up_date,
        follow_up_date_expression=follow_up_date_expression,
        follow_up_after=follow_up_after,
        follow_up_after_expression=follow_up_after_expression,
        follow_up_before=follow_up_before,
        follow_up_before_expression=follow_up_before_expression,
        follow_up_before_or_not_existent=follow_up_before_or_not_existent,
        follow_up_before_or_not_existent_expression=follow_up_before_or_not_existent_expression,
        created_on=created_on,
        created_on_expression=created_on_expression,
        created_after=created_after,
        created_after_expression=created_after_expression,
        created_before=created_before,
        created_before_expression=created_before_expression,
        delegation_state=delegation_state,
        candidate_groups=candidate_groups,
        candidate_groups_expression=candidate_groups_expression,
        with_candidate_groups=with_candidate_groups,
        without_candidate_groups=without_candidate_groups,
        with_candidate_users=with_candidate_users,
        without_candidate_users=without_candidate_users,
        active=active,
        suspended=suspended,
        task_variables=task_variables,
        process_variables=process_variables,
        case_instance_variables=case_instance_variables,
        variable_names_ignore_case=variable_names_ignore_case,
        variable_values_ignore_case=variable_values_ignore_case,
        parent_task_id=parent_task_id,
        sort_by=sort_by,
        sort_order=sort_order,
        first_result=first_result,
        max_results=max_results,
    )

    response = httpx.get(
        **kwargs,
    )

    return _build_response(response=response)


def sync(
    *,
    client: Client,
    task_id: Union[Unset, None, str] = UNSET,
    task_id_in: Union[Unset, None, str] = UNSET,
    process_instance_id: Union[Unset, None, str] = UNSET,
    process_instance_id_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key: Union[Unset, None, str] = UNSET,
    process_instance_business_key_expression: Union[Unset, None, str] = UNSET,
    process_instance_business_key_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like_expression: Union[Unset, None, str] = UNSET,
    process_definition_id: Union[Unset, None, str] = UNSET,
    process_definition_key: Union[Unset, None, str] = UNSET,
    process_definition_key_in: Union[Unset, None, str] = UNSET,
    process_definition_name: Union[Unset, None, str] = UNSET,
    process_definition_name_like: Union[Unset, None, str] = UNSET,
    execution_id: Union[Unset, None, str] = UNSET,
    case_instance_id: Union[Unset, None, str] = UNSET,
    case_instance_business_key: Union[Unset, None, str] = UNSET,
    case_instance_business_key_like: Union[Unset, None, str] = UNSET,
    case_definition_id: Union[Unset, None, str] = UNSET,
    case_definition_key: Union[Unset, None, str] = UNSET,
    case_definition_name: Union[Unset, None, str] = UNSET,
    case_definition_name_like: Union[Unset, None, str] = UNSET,
    case_execution_id: Union[Unset, None, str] = UNSET,
    activity_instance_id_in: Union[Unset, None, str] = UNSET,
    tenant_id_in: Union[Unset, None, str] = UNSET,
    without_tenant_id: Union[Unset, None, bool] = False,
    assignee: Union[Unset, None, str] = UNSET,
    assignee_expression: Union[Unset, None, str] = UNSET,
    assignee_like: Union[Unset, None, str] = UNSET,
    assignee_like_expression: Union[Unset, None, str] = UNSET,
    assignee_in: Union[Unset, None, str] = UNSET,
    owner: Union[Unset, None, str] = UNSET,
    owner_expression: Union[Unset, None, str] = UNSET,
    candidate_group: Union[Unset, None, str] = UNSET,
    candidate_group_expression: Union[Unset, None, str] = UNSET,
    candidate_user: Union[Unset, None, str] = UNSET,
    candidate_user_expression: Union[Unset, None, str] = UNSET,
    include_assigned_tasks: Union[Unset, None, bool] = False,
    involved_user: Union[Unset, None, str] = UNSET,
    involved_user_expression: Union[Unset, None, str] = UNSET,
    assigned: Union[Unset, None, bool] = False,
    unassigned: Union[Unset, None, bool] = False,
    task_definition_key: Union[Unset, None, str] = UNSET,
    task_definition_key_in: Union[Unset, None, str] = UNSET,
    task_definition_key_like: Union[Unset, None, str] = UNSET,
    name: Union[Unset, None, str] = UNSET,
    name_not_equal: Union[Unset, None, str] = UNSET,
    name_like: Union[Unset, None, str] = UNSET,
    name_not_like: Union[Unset, None, str] = UNSET,
    description: Union[Unset, None, str] = UNSET,
    description_like: Union[Unset, None, str] = UNSET,
    priority: Union[Unset, None, int] = UNSET,
    max_priority: Union[Unset, None, int] = UNSET,
    min_priority: Union[Unset, None, int] = UNSET,
    due_date: Union[Unset, None, str] = UNSET,
    due_date_expression: Union[Unset, None, str] = UNSET,
    due_after: Union[Unset, None, str] = UNSET,
    due_after_expression: Union[Unset, None, str] = UNSET,
    due_before: Union[Unset, None, str] = UNSET,
    due_before_expression: Union[Unset, None, str] = UNSET,
    without_due_date: Union[Unset, None, bool] = False,
    follow_up_date: Union[Unset, None, str] = UNSET,
    follow_up_date_expression: Union[Unset, None, str] = UNSET,
    follow_up_after: Union[Unset, None, str] = UNSET,
    follow_up_after_expression: Union[Unset, None, str] = UNSET,
    follow_up_before: Union[Unset, None, str] = UNSET,
    follow_up_before_expression: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent_expression: Union[Unset, None, str] = UNSET,
    created_on: Union[Unset, None, str] = UNSET,
    created_on_expression: Union[Unset, None, str] = UNSET,
    created_after: Union[Unset, None, str] = UNSET,
    created_after_expression: Union[Unset, None, str] = UNSET,
    created_before: Union[Unset, None, str] = UNSET,
    created_before_expression: Union[Unset, None, str] = UNSET,
    delegation_state: Union[Unset, None, GetTasksDelegationState] = UNSET,
    candidate_groups: Union[Unset, None, str] = UNSET,
    candidate_groups_expression: Union[Unset, None, str] = UNSET,
    with_candidate_groups: Union[Unset, None, bool] = False,
    without_candidate_groups: Union[Unset, None, bool] = False,
    with_candidate_users: Union[Unset, None, bool] = False,
    without_candidate_users: Union[Unset, None, bool] = False,
    active: Union[Unset, None, bool] = False,
    suspended: Union[Unset, None, bool] = False,
    task_variables: Union[Unset, None, str] = UNSET,
    process_variables: Union[Unset, None, str] = UNSET,
    case_instance_variables: Union[Unset, None, str] = UNSET,
    variable_names_ignore_case: Union[Unset, None, bool] = False,
    variable_values_ignore_case: Union[Unset, None, bool] = False,
    parent_task_id: Union[Unset, None, str] = UNSET,
    sort_by: Union[Unset, None, GetTasksSortBy] = UNSET,
    sort_order: Union[Unset, None, GetTasksSortOrder] = UNSET,
    first_result: Union[Unset, None, int] = UNSET,
    max_results: Union[Unset, None, int] = UNSET,
) -> Optional[Union[ExceptionDto, List[TaskDto]]]:
    """Queries for tasks that fulfill a given filter. The size of the result set can be
    retrieved by using the Get Task Count method.

    **Security Consideration:** There are several query parameters (such as
    assigneeExpression) for specifying an EL expression. These are disabled by default to
    prevent remote code execution. See the section on
    [security considerations](https://docs.camunda.org/manual/7.15/user-guide/process-engine/securing-custom-code/)
    for custom code in the user guide for details."""

    return sync_detailed(
        client=client,
        task_id=task_id,
        task_id_in=task_id_in,
        process_instance_id=process_instance_id,
        process_instance_id_in=process_instance_id_in,
        process_instance_business_key=process_instance_business_key,
        process_instance_business_key_expression=process_instance_business_key_expression,
        process_instance_business_key_in=process_instance_business_key_in,
        process_instance_business_key_like=process_instance_business_key_like,
        process_instance_business_key_like_expression=process_instance_business_key_like_expression,
        process_definition_id=process_definition_id,
        process_definition_key=process_definition_key,
        process_definition_key_in=process_definition_key_in,
        process_definition_name=process_definition_name,
        process_definition_name_like=process_definition_name_like,
        execution_id=execution_id,
        case_instance_id=case_instance_id,
        case_instance_business_key=case_instance_business_key,
        case_instance_business_key_like=case_instance_business_key_like,
        case_definition_id=case_definition_id,
        case_definition_key=case_definition_key,
        case_definition_name=case_definition_name,
        case_definition_name_like=case_definition_name_like,
        case_execution_id=case_execution_id,
        activity_instance_id_in=activity_instance_id_in,
        tenant_id_in=tenant_id_in,
        without_tenant_id=without_tenant_id,
        assignee=assignee,
        assignee_expression=assignee_expression,
        assignee_like=assignee_like,
        assignee_like_expression=assignee_like_expression,
        assignee_in=assignee_in,
        owner=owner,
        owner_expression=owner_expression,
        candidate_group=candidate_group,
        candidate_group_expression=candidate_group_expression,
        candidate_user=candidate_user,
        candidate_user_expression=candidate_user_expression,
        include_assigned_tasks=include_assigned_tasks,
        involved_user=involved_user,
        involved_user_expression=involved_user_expression,
        assigned=assigned,
        unassigned=unassigned,
        task_definition_key=task_definition_key,
        task_definition_key_in=task_definition_key_in,
        task_definition_key_like=task_definition_key_like,
        name=name,
        name_not_equal=name_not_equal,
        name_like=name_like,
        name_not_like=name_not_like,
        description=description,
        description_like=description_like,
        priority=priority,
        max_priority=max_priority,
        min_priority=min_priority,
        due_date=due_date,
        due_date_expression=due_date_expression,
        due_after=due_after,
        due_after_expression=due_after_expression,
        due_before=due_before,
        due_before_expression=due_before_expression,
        without_due_date=without_due_date,
        follow_up_date=follow_up_date,
        follow_up_date_expression=follow_up_date_expression,
        follow_up_after=follow_up_after,
        follow_up_after_expression=follow_up_after_expression,
        follow_up_before=follow_up_before,
        follow_up_before_expression=follow_up_before_expression,
        follow_up_before_or_not_existent=follow_up_before_or_not_existent,
        follow_up_before_or_not_existent_expression=follow_up_before_or_not_existent_expression,
        created_on=created_on,
        created_on_expression=created_on_expression,
        created_after=created_after,
        created_after_expression=created_after_expression,
        created_before=created_before,
        created_before_expression=created_before_expression,
        delegation_state=delegation_state,
        candidate_groups=candidate_groups,
        candidate_groups_expression=candidate_groups_expression,
        with_candidate_groups=with_candidate_groups,
        without_candidate_groups=without_candidate_groups,
        with_candidate_users=with_candidate_users,
        without_candidate_users=without_candidate_users,
        active=active,
        suspended=suspended,
        task_variables=task_variables,
        process_variables=process_variables,
        case_instance_variables=case_instance_variables,
        variable_names_ignore_case=variable_names_ignore_case,
        variable_values_ignore_case=variable_values_ignore_case,
        parent_task_id=parent_task_id,
        sort_by=sort_by,
        sort_order=sort_order,
        first_result=first_result,
        max_results=max_results,
    ).parsed


async def asyncio_detailed(
    *,
    client: Client,
    task_id: Union[Unset, None, str] = UNSET,
    task_id_in: Union[Unset, None, str] = UNSET,
    process_instance_id: Union[Unset, None, str] = UNSET,
    process_instance_id_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key: Union[Unset, None, str] = UNSET,
    process_instance_business_key_expression: Union[Unset, None, str] = UNSET,
    process_instance_business_key_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like_expression: Union[Unset, None, str] = UNSET,
    process_definition_id: Union[Unset, None, str] = UNSET,
    process_definition_key: Union[Unset, None, str] = UNSET,
    process_definition_key_in: Union[Unset, None, str] = UNSET,
    process_definition_name: Union[Unset, None, str] = UNSET,
    process_definition_name_like: Union[Unset, None, str] = UNSET,
    execution_id: Union[Unset, None, str] = UNSET,
    case_instance_id: Union[Unset, None, str] = UNSET,
    case_instance_business_key: Union[Unset, None, str] = UNSET,
    case_instance_business_key_like: Union[Unset, None, str] = UNSET,
    case_definition_id: Union[Unset, None, str] = UNSET,
    case_definition_key: Union[Unset, None, str] = UNSET,
    case_definition_name: Union[Unset, None, str] = UNSET,
    case_definition_name_like: Union[Unset, None, str] = UNSET,
    case_execution_id: Union[Unset, None, str] = UNSET,
    activity_instance_id_in: Union[Unset, None, str] = UNSET,
    tenant_id_in: Union[Unset, None, str] = UNSET,
    without_tenant_id: Union[Unset, None, bool] = False,
    assignee: Union[Unset, None, str] = UNSET,
    assignee_expression: Union[Unset, None, str] = UNSET,
    assignee_like: Union[Unset, None, str] = UNSET,
    assignee_like_expression: Union[Unset, None, str] = UNSET,
    assignee_in: Union[Unset, None, str] = UNSET,
    owner: Union[Unset, None, str] = UNSET,
    owner_expression: Union[Unset, None, str] = UNSET,
    candidate_group: Union[Unset, None, str] = UNSET,
    candidate_group_expression: Union[Unset, None, str] = UNSET,
    candidate_user: Union[Unset, None, str] = UNSET,
    candidate_user_expression: Union[Unset, None, str] = UNSET,
    include_assigned_tasks: Union[Unset, None, bool] = False,
    involved_user: Union[Unset, None, str] = UNSET,
    involved_user_expression: Union[Unset, None, str] = UNSET,
    assigned: Union[Unset, None, bool] = False,
    unassigned: Union[Unset, None, bool] = False,
    task_definition_key: Union[Unset, None, str] = UNSET,
    task_definition_key_in: Union[Unset, None, str] = UNSET,
    task_definition_key_like: Union[Unset, None, str] = UNSET,
    name: Union[Unset, None, str] = UNSET,
    name_not_equal: Union[Unset, None, str] = UNSET,
    name_like: Union[Unset, None, str] = UNSET,
    name_not_like: Union[Unset, None, str] = UNSET,
    description: Union[Unset, None, str] = UNSET,
    description_like: Union[Unset, None, str] = UNSET,
    priority: Union[Unset, None, int] = UNSET,
    max_priority: Union[Unset, None, int] = UNSET,
    min_priority: Union[Unset, None, int] = UNSET,
    due_date: Union[Unset, None, str] = UNSET,
    due_date_expression: Union[Unset, None, str] = UNSET,
    due_after: Union[Unset, None, str] = UNSET,
    due_after_expression: Union[Unset, None, str] = UNSET,
    due_before: Union[Unset, None, str] = UNSET,
    due_before_expression: Union[Unset, None, str] = UNSET,
    without_due_date: Union[Unset, None, bool] = False,
    follow_up_date: Union[Unset, None, str] = UNSET,
    follow_up_date_expression: Union[Unset, None, str] = UNSET,
    follow_up_after: Union[Unset, None, str] = UNSET,
    follow_up_after_expression: Union[Unset, None, str] = UNSET,
    follow_up_before: Union[Unset, None, str] = UNSET,
    follow_up_before_expression: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent_expression: Union[Unset, None, str] = UNSET,
    created_on: Union[Unset, None, str] = UNSET,
    created_on_expression: Union[Unset, None, str] = UNSET,
    created_after: Union[Unset, None, str] = UNSET,
    created_after_expression: Union[Unset, None, str] = UNSET,
    created_before: Union[Unset, None, str] = UNSET,
    created_before_expression: Union[Unset, None, str] = UNSET,
    delegation_state: Union[Unset, None, GetTasksDelegationState] = UNSET,
    candidate_groups: Union[Unset, None, str] = UNSET,
    candidate_groups_expression: Union[Unset, None, str] = UNSET,
    with_candidate_groups: Union[Unset, None, bool] = False,
    without_candidate_groups: Union[Unset, None, bool] = False,
    with_candidate_users: Union[Unset, None, bool] = False,
    without_candidate_users: Union[Unset, None, bool] = False,
    active: Union[Unset, None, bool] = False,
    suspended: Union[Unset, None, bool] = False,
    task_variables: Union[Unset, None, str] = UNSET,
    process_variables: Union[Unset, None, str] = UNSET,
    case_instance_variables: Union[Unset, None, str] = UNSET,
    variable_names_ignore_case: Union[Unset, None, bool] = False,
    variable_values_ignore_case: Union[Unset, None, bool] = False,
    parent_task_id: Union[Unset, None, str] = UNSET,
    sort_by: Union[Unset, None, GetTasksSortBy] = UNSET,
    sort_order: Union[Unset, None, GetTasksSortOrder] = UNSET,
    first_result: Union[Unset, None, int] = UNSET,
    max_results: Union[Unset, None, int] = UNSET,
) -> Response[Union[ExceptionDto, List[TaskDto]]]:
    kwargs = _get_kwargs(
        client=client,
        task_id=task_id,
        task_id_in=task_id_in,
        process_instance_id=process_instance_id,
        process_instance_id_in=process_instance_id_in,
        process_instance_business_key=process_instance_business_key,
        process_instance_business_key_expression=process_instance_business_key_expression,
        process_instance_business_key_in=process_instance_business_key_in,
        process_instance_business_key_like=process_instance_business_key_like,
        process_instance_business_key_like_expression=process_instance_business_key_like_expression,
        process_definition_id=process_definition_id,
        process_definition_key=process_definition_key,
        process_definition_key_in=process_definition_key_in,
        process_definition_name=process_definition_name,
        process_definition_name_like=process_definition_name_like,
        execution_id=execution_id,
        case_instance_id=case_instance_id,
        case_instance_business_key=case_instance_business_key,
        case_instance_business_key_like=case_instance_business_key_like,
        case_definition_id=case_definition_id,
        case_definition_key=case_definition_key,
        case_definition_name=case_definition_name,
        case_definition_name_like=case_definition_name_like,
        case_execution_id=case_execution_id,
        activity_instance_id_in=activity_instance_id_in,
        tenant_id_in=tenant_id_in,
        without_tenant_id=without_tenant_id,
        assignee=assignee,
        assignee_expression=assignee_expression,
        assignee_like=assignee_like,
        assignee_like_expression=assignee_like_expression,
        assignee_in=assignee_in,
        owner=owner,
        owner_expression=owner_expression,
        candidate_group=candidate_group,
        candidate_group_expression=candidate_group_expression,
        candidate_user=candidate_user,
        candidate_user_expression=candidate_user_expression,
        include_assigned_tasks=include_assigned_tasks,
        involved_user=involved_user,
        involved_user_expression=involved_user_expression,
        assigned=assigned,
        unassigned=unassigned,
        task_definition_key=task_definition_key,
        task_definition_key_in=task_definition_key_in,
        task_definition_key_like=task_definition_key_like,
        name=name,
        name_not_equal=name_not_equal,
        name_like=name_like,
        name_not_like=name_not_like,
        description=description,
        description_like=description_like,
        priority=priority,
        max_priority=max_priority,
        min_priority=min_priority,
        due_date=due_date,
        due_date_expression=due_date_expression,
        due_after=due_after,
        due_after_expression=due_after_expression,
        due_before=due_before,
        due_before_expression=due_before_expression,
        without_due_date=without_due_date,
        follow_up_date=follow_up_date,
        follow_up_date_expression=follow_up_date_expression,
        follow_up_after=follow_up_after,
        follow_up_after_expression=follow_up_after_expression,
        follow_up_before=follow_up_before,
        follow_up_before_expression=follow_up_before_expression,
        follow_up_before_or_not_existent=follow_up_before_or_not_existent,
        follow_up_before_or_not_existent_expression=follow_up_before_or_not_existent_expression,
        created_on=created_on,
        created_on_expression=created_on_expression,
        created_after=created_after,
        created_after_expression=created_after_expression,
        created_before=created_before,
        created_before_expression=created_before_expression,
        delegation_state=delegation_state,
        candidate_groups=candidate_groups,
        candidate_groups_expression=candidate_groups_expression,
        with_candidate_groups=with_candidate_groups,
        without_candidate_groups=without_candidate_groups,
        with_candidate_users=with_candidate_users,
        without_candidate_users=without_candidate_users,
        active=active,
        suspended=suspended,
        task_variables=task_variables,
        process_variables=process_variables,
        case_instance_variables=case_instance_variables,
        variable_names_ignore_case=variable_names_ignore_case,
        variable_values_ignore_case=variable_values_ignore_case,
        parent_task_id=parent_task_id,
        sort_by=sort_by,
        sort_order=sort_order,
        first_result=first_result,
        max_results=max_results,
    )

    async with httpx.AsyncClient() as _client:
        response = await _client.get(**kwargs)

    return _build_response(response=response)


async def asyncio(
    *,
    client: Client,
    task_id: Union[Unset, None, str] = UNSET,
    task_id_in: Union[Unset, None, str] = UNSET,
    process_instance_id: Union[Unset, None, str] = UNSET,
    process_instance_id_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key: Union[Unset, None, str] = UNSET,
    process_instance_business_key_expression: Union[Unset, None, str] = UNSET,
    process_instance_business_key_in: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like: Union[Unset, None, str] = UNSET,
    process_instance_business_key_like_expression: Union[Unset, None, str] = UNSET,
    process_definition_id: Union[Unset, None, str] = UNSET,
    process_definition_key: Union[Unset, None, str] = UNSET,
    process_definition_key_in: Union[Unset, None, str] = UNSET,
    process_definition_name: Union[Unset, None, str] = UNSET,
    process_definition_name_like: Union[Unset, None, str] = UNSET,
    execution_id: Union[Unset, None, str] = UNSET,
    case_instance_id: Union[Unset, None, str] = UNSET,
    case_instance_business_key: Union[Unset, None, str] = UNSET,
    case_instance_business_key_like: Union[Unset, None, str] = UNSET,
    case_definition_id: Union[Unset, None, str] = UNSET,
    case_definition_key: Union[Unset, None, str] = UNSET,
    case_definition_name: Union[Unset, None, str] = UNSET,
    case_definition_name_like: Union[Unset, None, str] = UNSET,
    case_execution_id: Union[Unset, None, str] = UNSET,
    activity_instance_id_in: Union[Unset, None, str] = UNSET,
    tenant_id_in: Union[Unset, None, str] = UNSET,
    without_tenant_id: Union[Unset, None, bool] = False,
    assignee: Union[Unset, None, str] = UNSET,
    assignee_expression: Union[Unset, None, str] = UNSET,
    assignee_like: Union[Unset, None, str] = UNSET,
    assignee_like_expression: Union[Unset, None, str] = UNSET,
    assignee_in: Union[Unset, None, str] = UNSET,
    owner: Union[Unset, None, str] = UNSET,
    owner_expression: Union[Unset, None, str] = UNSET,
    candidate_group: Union[Unset, None, str] = UNSET,
    candidate_group_expression: Union[Unset, None, str] = UNSET,
    candidate_user: Union[Unset, None, str] = UNSET,
    candidate_user_expression: Union[Unset, None, str] = UNSET,
    include_assigned_tasks: Union[Unset, None, bool] = False,
    involved_user: Union[Unset, None, str] = UNSET,
    involved_user_expression: Union[Unset, None, str] = UNSET,
    assigned: Union[Unset, None, bool] = False,
    unassigned: Union[Unset, None, bool] = False,
    task_definition_key: Union[Unset, None, str] = UNSET,
    task_definition_key_in: Union[Unset, None, str] = UNSET,
    task_definition_key_like: Union[Unset, None, str] = UNSET,
    name: Union[Unset, None, str] = UNSET,
    name_not_equal: Union[Unset, None, str] = UNSET,
    name_like: Union[Unset, None, str] = UNSET,
    name_not_like: Union[Unset, None, str] = UNSET,
    description: Union[Unset, None, str] = UNSET,
    description_like: Union[Unset, None, str] = UNSET,
    priority: Union[Unset, None, int] = UNSET,
    max_priority: Union[Unset, None, int] = UNSET,
    min_priority: Union[Unset, None, int] = UNSET,
    due_date: Union[Unset, None, str] = UNSET,
    due_date_expression: Union[Unset, None, str] = UNSET,
    due_after: Union[Unset, None, str] = UNSET,
    due_after_expression: Union[Unset, None, str] = UNSET,
    due_before: Union[Unset, None, str] = UNSET,
    due_before_expression: Union[Unset, None, str] = UNSET,
    without_due_date: Union[Unset, None, bool] = False,
    follow_up_date: Union[Unset, None, str] = UNSET,
    follow_up_date_expression: Union[Unset, None, str] = UNSET,
    follow_up_after: Union[Unset, None, str] = UNSET,
    follow_up_after_expression: Union[Unset, None, str] = UNSET,
    follow_up_before: Union[Unset, None, str] = UNSET,
    follow_up_before_expression: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent: Union[Unset, None, str] = UNSET,
    follow_up_before_or_not_existent_expression: Union[Unset, None, str] = UNSET,
    created_on: Union[Unset, None, str] = UNSET,
    created_on_expression: Union[Unset, None, str] = UNSET,
    created_after: Union[Unset, None, str] = UNSET,
    created_after_expression: Union[Unset, None, str] = UNSET,
    created_before: Union[Unset, None, str] = UNSET,
    created_before_expression: Union[Unset, None, str] = UNSET,
    delegation_state: Union[Unset, None, GetTasksDelegationState] = UNSET,
    candidate_groups: Union[Unset, None, str] = UNSET,
    candidate_groups_expression: Union[Unset, None, str] = UNSET,
    with_candidate_groups: Union[Unset, None, bool] = False,
    without_candidate_groups: Union[Unset, None, bool] = False,
    with_candidate_users: Union[Unset, None, bool] = False,
    without_candidate_users: Union[Unset, None, bool] = False,
    active: Union[Unset, None, bool] = False,
    suspended: Union[Unset, None, bool] = False,
    task_variables: Union[Unset, None, str] = UNSET,
    process_variables: Union[Unset, None, str] = UNSET,
    case_instance_variables: Union[Unset, None, str] = UNSET,
    variable_names_ignore_case: Union[Unset, None, bool] = False,
    variable_values_ignore_case: Union[Unset, None, bool] = False,
    parent_task_id: Union[Unset, None, str] = UNSET,
    sort_by: Union[Unset, None, GetTasksSortBy] = UNSET,
    sort_order: Union[Unset, None, GetTasksSortOrder] = UNSET,
    first_result: Union[Unset, None, int] = UNSET,
    max_results: Union[Unset, None, int] = UNSET,
) -> Optional[Union[ExceptionDto, List[TaskDto]]]:
    """Queries for tasks that fulfill a given filter. The size of the result set can be
    retrieved by using the Get Task Count method.

    **Security Consideration:** There are several query parameters (such as
    assigneeExpression) for specifying an EL expression. These are disabled by default to
    prevent remote code execution. See the section on
    [security considerations](https://docs.camunda.org/manual/7.15/user-guide/process-engine/securing-custom-code/)
    for custom code in the user guide for details."""

    return (
        await asyncio_detailed(
            client=client,
            task_id=task_id,
            task_id_in=task_id_in,
            process_instance_id=process_instance_id,
            process_instance_id_in=process_instance_id_in,
            process_instance_business_key=process_instance_business_key,
            process_instance_business_key_expression=process_instance_business_key_expression,
            process_instance_business_key_in=process_instance_business_key_in,
            process_instance_business_key_like=process_instance_business_key_like,
            process_instance_business_key_like_expression=process_instance_business_key_like_expression,
            process_definition_id=process_definition_id,
            process_definition_key=process_definition_key,
            process_definition_key_in=process_definition_key_in,
            process_definition_name=process_definition_name,
            process_definition_name_like=process_definition_name_like,
            execution_id=execution_id,
            case_instance_id=case_instance_id,
            case_instance_business_key=case_instance_business_key,
            case_instance_business_key_like=case_instance_business_key_like,
            case_definition_id=case_definition_id,
            case_definition_key=case_definition_key,
            case_definition_name=case_definition_name,
            case_definition_name_like=case_definition_name_like,
            case_execution_id=case_execution_id,
            activity_instance_id_in=activity_instance_id_in,
            tenant_id_in=tenant_id_in,
            without_tenant_id=without_tenant_id,
            assignee=assignee,
            assignee_expression=assignee_expression,
            assignee_like=assignee_like,
            assignee_like_expression=assignee_like_expression,
            assignee_in=assignee_in,
            owner=owner,
            owner_expression=owner_expression,
            candidate_group=candidate_group,
            candidate_group_expression=candidate_group_expression,
            candidate_user=candidate_user,
            candidate_user_expression=candidate_user_expression,
            include_assigned_tasks=include_assigned_tasks,
            involved_user=involved_user,
            involved_user_expression=involved_user_expression,
            assigned=assigned,
            unassigned=unassigned,
            task_definition_key=task_definition_key,
            task_definition_key_in=task_definition_key_in,
            task_definition_key_like=task_definition_key_like,
            name=name,
            name_not_equal=name_not_equal,
            name_like=name_like,
            name_not_like=name_not_like,
            description=description,
            description_like=description_like,
            priority=priority,
            max_priority=max_priority,
            min_priority=min_priority,
            due_date=due_date,
            due_date_expression=due_date_expression,
            due_after=due_after,
            due_after_expression=due_after_expression,
            due_before=due_before,
            due_before_expression=due_before_expression,
            without_due_date=without_due_date,
            follow_up_date=follow_up_date,
            follow_up_date_expression=follow_up_date_expression,
            follow_up_after=follow_up_after,
            follow_up_after_expression=follow_up_after_expression,
            follow_up_before=follow_up_before,
            follow_up_before_expression=follow_up_before_expression,
            follow_up_before_or_not_existent=follow_up_before_or_not_existent,
            follow_up_before_or_not_existent_expression=follow_up_before_or_not_existent_expression,
            created_on=created_on,
            created_on_expression=created_on_expression,
            created_after=created_after,
            created_after_expression=created_after_expression,
            created_before=created_before,
            created_before_expression=created_before_expression,
            delegation_state=delegation_state,
            candidate_groups=candidate_groups,
            candidate_groups_expression=candidate_groups_expression,
            with_candidate_groups=with_candidate_groups,
            without_candidate_groups=without_candidate_groups,
            with_candidate_users=with_candidate_users,
            without_candidate_users=without_candidate_users,
            active=active,
            suspended=suspended,
            task_variables=task_variables,
            process_variables=process_variables,
            case_instance_variables=case_instance_variables,
            variable_names_ignore_case=variable_names_ignore_case,
            variable_values_ignore_case=variable_values_ignore_case,
            parent_task_id=parent_task_id,
            sort_by=sort_by,
            sort_order=sort_order,
            first_result=first_result,
            max_results=max_results,
        )
    ).parsed
